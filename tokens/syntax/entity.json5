// These are names of functions, data structures, classes, etc., but not of 
// variables which reference them. For example, `var foo = someFunction();`, 
// `someFunction()` would be an entity. Entity also includes some HTML syntax 
// like tags and tag attributes.
{
  "syntax": {
    // The entity scopes are generally assigned to the names of data structures,
    // types and other uniquely-identifiable constructs in code and markup. The 
    // notable exceptions are entity.name.tag and entity.other.attribute-name, 
    // which are used in HTML and XML tags.
    "entity": {
      "name": {
        "class": {},
        "struct": {},
        "enum": {},
        "union": {},
        "trait": {},
        "interface": {},
        "impl": {},
        "tag": {
          "*": { "value": "{color.font.code.secondary.olive.value}" },
          "reference": { "value": "{color.font.code.primary.purple.value}" },
          "yaml": { "value": "{color.font.code.primary.teal.value}" },
        },
        "type": {
          "module": { "value": "{color.font.code.primary.teal.value}" }
        },
        "function": {
          "*": { "value": "{color.font.code.primary.blue.value}" },
          "constructor": {},
          "destructor": {}
        }
      },
      "other": {
        "attribute-name": {
          "id": { "value": "{color.font.code.primary.blue.value}" },
          "class": { "value": "{color.font.primary.60.value}" },
          "*": { "value": "{color.font.code.secondary.blue.value}" }
        }
      }
    }
  }
}